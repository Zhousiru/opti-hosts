name: "dev-release"

on:
  push:
    branches:
      - "main"

jobs:
  pre-release:
    name: "Dev Release"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install cross
        run: cargo install cross

      - name: Build x86_64-unknown-linux-gnu
        run: cross build --release --target x86_64-unknown-linux-gnu

      - name: Build x86_64-unknown-linux-musl
        run: cross build --release --target x86_64-unknown-linux-musl

      - name: Build aarch64-unknown-linux-gnu
        run: cross build --release --target aarch64-unknown-linux-gnu

      - name: Build aarch64-unknown-linux-musl
        run: cross build --release --target aarch64-unknown-linux-musl

      - name: Prepare release files
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-gnu/release/opti-hosts dist/opti-hosts-x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-musl/release/opti-hosts dist/opti-hosts-x86_64-unknown-linux-musl
          cp target/aarch64-unknown-linux-gnu/release/opti-hosts dist/opti-hosts-aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-musl/release/opti-hosts dist/opti-hosts-aarch64-unknown-linux-musl

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/opti-hosts-x86_64-unknown-linux-gnu
            dist/opti-hosts-x86_64-unknown-linux-musl
            dist/opti-hosts-aarch64-unknown-linux-gnu
            dist/opti-hosts-aarch64-unknown-linux-musl
